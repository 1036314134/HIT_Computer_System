
linkbomb2:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   %ebx
    1001:	83 ec 08             	sub    $0x8,%esp
    1004:	e8 a7 00 00 00       	call   10b0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 cb 2f 00 00    	add    $0x2fcb,%ebx
    100f:	8b 83 20 00 00 00    	mov    0x20(%ebx),%eax
    1015:	85 c0                	test   %eax,%eax
    1017:	74 02                	je     101b <_init+0x1b>
    1019:	ff d0                	call   *%eax
    101b:	83 c4 08             	add    $0x8,%esp
    101e:	5b                   	pop    %ebx
    101f:	c3                   	ret    

Disassembly of section .plt:

00001020 <.plt>:
    1020:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1026:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    102c:	00 00                	add    %al,(%eax)
	...

00001030 <strcmp@plt>:
    1030:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <.plt>

00001040 <puts@plt>:
    1040:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    1046:	68 08 00 00 00       	push   $0x8
    104b:	e9 d0 ff ff ff       	jmp    1020 <.plt>

00001050 <__libc_start_main@plt>:
    1050:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    1056:	68 10 00 00 00       	push   $0x10
    105b:	e9 c0 ff ff ff       	jmp    1020 <.plt>

Disassembly of section .plt.got:

00001060 <__cxa_finalize@plt>:
    1060:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    1066:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00001070 <_start>:
    1070:	31 ed                	xor    %ebp,%ebp
    1072:	5e                   	pop    %esi
    1073:	89 e1                	mov    %esp,%ecx
    1075:	83 e4 f0             	and    $0xfffffff0,%esp
    1078:	50                   	push   %eax
    1079:	54                   	push   %esp
    107a:	52                   	push   %edx
    107b:	e8 22 00 00 00       	call   10a2 <_start+0x32>
    1080:	81 c3 54 2f 00 00    	add    $0x2f54,%ebx
    1086:	8d 83 0c d3 ff ff    	lea    -0x2cf4(%ebx),%eax
    108c:	50                   	push   %eax
    108d:	8d 83 ac d2 ff ff    	lea    -0x2d54(%ebx),%eax
    1093:	50                   	push   %eax
    1094:	51                   	push   %ecx
    1095:	56                   	push   %esi
    1096:	ff b3 24 00 00 00    	pushl  0x24(%ebx)
    109c:	e8 af ff ff ff       	call   1050 <__libc_start_main@plt>
    10a1:	f4                   	hlt    
    10a2:	8b 1c 24             	mov    (%esp),%ebx
    10a5:	c3                   	ret    
    10a6:	66 90                	xchg   %ax,%ax
    10a8:	66 90                	xchg   %ax,%ax
    10aa:	66 90                	xchg   %ax,%ax
    10ac:	66 90                	xchg   %ax,%ax
    10ae:	66 90                	xchg   %ax,%ax

000010b0 <__x86.get_pc_thunk.bx>:
    10b0:	8b 1c 24             	mov    (%esp),%ebx
    10b3:	c3                   	ret    
    10b4:	66 90                	xchg   %ax,%ax
    10b6:	66 90                	xchg   %ax,%ax
    10b8:	66 90                	xchg   %ax,%ax
    10ba:	66 90                	xchg   %ax,%ax
    10bc:	66 90                	xchg   %ax,%ax
    10be:	66 90                	xchg   %ax,%ax

000010c0 <deregister_tm_clones>:
    10c0:	e8 e0 00 00 00       	call   11a5 <__x86.get_pc_thunk.dx>
    10c5:	81 c2 0f 2f 00 00    	add    $0x2f0f,%edx
    10cb:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    10d1:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    10d7:	39 c8                	cmp    %ecx,%eax
    10d9:	74 1d                	je     10f8 <deregister_tm_clones+0x38>
    10db:	8b 82 18 00 00 00    	mov    0x18(%edx),%eax
    10e1:	85 c0                	test   %eax,%eax
    10e3:	74 13                	je     10f8 <deregister_tm_clones+0x38>
    10e5:	55                   	push   %ebp
    10e6:	89 e5                	mov    %esp,%ebp
    10e8:	83 ec 14             	sub    $0x14,%esp
    10eb:	51                   	push   %ecx
    10ec:	ff d0                	call   *%eax
    10ee:	83 c4 10             	add    $0x10,%esp
    10f1:	c9                   	leave  
    10f2:	c3                   	ret    
    10f3:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    10f7:	90                   	nop
    10f8:	c3                   	ret    
    10f9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

00001100 <register_tm_clones>:
    1100:	e8 a0 00 00 00       	call   11a5 <__x86.get_pc_thunk.dx>
    1105:	81 c2 cf 2e 00 00    	add    $0x2ecf,%edx
    110b:	55                   	push   %ebp
    110c:	89 e5                	mov    %esp,%ebp
    110e:	53                   	push   %ebx
    110f:	8d 8a 38 00 00 00    	lea    0x38(%edx),%ecx
    1115:	8d 82 38 00 00 00    	lea    0x38(%edx),%eax
    111b:	83 ec 04             	sub    $0x4,%esp
    111e:	29 c8                	sub    %ecx,%eax
    1120:	c1 f8 02             	sar    $0x2,%eax
    1123:	89 c3                	mov    %eax,%ebx
    1125:	c1 eb 1f             	shr    $0x1f,%ebx
    1128:	01 d8                	add    %ebx,%eax
    112a:	d1 f8                	sar    %eax
    112c:	74 14                	je     1142 <register_tm_clones+0x42>
    112e:	8b 92 28 00 00 00    	mov    0x28(%edx),%edx
    1134:	85 d2                	test   %edx,%edx
    1136:	74 0a                	je     1142 <register_tm_clones+0x42>
    1138:	83 ec 08             	sub    $0x8,%esp
    113b:	50                   	push   %eax
    113c:	51                   	push   %ecx
    113d:	ff d2                	call   *%edx
    113f:	83 c4 10             	add    $0x10,%esp
    1142:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1145:	c9                   	leave  
    1146:	c3                   	ret    
    1147:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    114e:	66 90                	xchg   %ax,%ax

00001150 <__do_global_dtors_aux>:
    1150:	55                   	push   %ebp
    1151:	89 e5                	mov    %esp,%ebp
    1153:	53                   	push   %ebx
    1154:	e8 57 ff ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    1159:	81 c3 7b 2e 00 00    	add    $0x2e7b,%ebx
    115f:	83 ec 04             	sub    $0x4,%esp
    1162:	80 bb 38 00 00 00 00 	cmpb   $0x0,0x38(%ebx)
    1169:	75 27                	jne    1192 <__do_global_dtors_aux+0x42>
    116b:	8b 83 1c 00 00 00    	mov    0x1c(%ebx),%eax
    1171:	85 c0                	test   %eax,%eax
    1173:	74 11                	je     1186 <__do_global_dtors_aux+0x36>
    1175:	83 ec 0c             	sub    $0xc,%esp
    1178:	ff b3 30 00 00 00    	pushl  0x30(%ebx)
    117e:	e8 dd fe ff ff       	call   1060 <__cxa_finalize@plt>
    1183:	83 c4 10             	add    $0x10,%esp
    1186:	e8 35 ff ff ff       	call   10c0 <deregister_tm_clones>
    118b:	c6 83 38 00 00 00 01 	movb   $0x1,0x38(%ebx)
    1192:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1195:	c9                   	leave  
    1196:	c3                   	ret    
    1197:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    119e:	66 90                	xchg   %ax,%ax

000011a0 <frame_dummy>:
    11a0:	e9 5b ff ff ff       	jmp    1100 <register_tm_clones>

000011a5 <__x86.get_pc_thunk.dx>:
    11a5:	8b 14 24             	mov    (%esp),%edx
    11a8:	c3                   	ret    

000011a9 <main>:
    11a9:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    11ad:	83 e4 f0             	and    $0xfffffff0,%esp
    11b0:	ff 71 fc             	pushl  -0x4(%ecx)
    11b3:	55                   	push   %ebp
    11b4:	89 e5                	mov    %esp,%ebp
    11b6:	53                   	push   %ebx
    11b7:	51                   	push   %ecx
    11b8:	e8 40 00 00 00       	call   11fd <__x86.get_pc_thunk.ax>
    11bd:	05 17 2e 00 00       	add    $0x2e17,%eax
    11c2:	8d 90 34 00 00 00    	lea    0x34(%eax),%edx
    11c8:	8b 12                	mov    (%edx),%edx
    11ca:	85 d2                	test   %edx,%edx
    11cc:	74 0c                	je     11da <main+0x31>
    11ce:	8d 80 34 00 00 00    	lea    0x34(%eax),%eax
    11d4:	8b 00                	mov    (%eax),%eax
    11d6:	ff d0                	call   *%eax
    11d8:	eb 14                	jmp    11ee <main+0x45>
    11da:	83 ec 0c             	sub    $0xc,%esp
    11dd:	8d 90 34 e0 ff ff    	lea    -0x1fcc(%eax),%edx
    11e3:	52                   	push   %edx
    11e4:	89 c3                	mov    %eax,%ebx
    11e6:	e8 55 fe ff ff       	call   1040 <puts@plt>
    11eb:	83 c4 10             	add    $0x10,%esp
    11ee:	b8 00 00 00 00       	mov    $0x0,%eax
    11f3:	8d 65 f8             	lea    -0x8(%ebp),%esp
    11f6:	59                   	pop    %ecx
    11f7:	5b                   	pop    %ebx
    11f8:	5d                   	pop    %ebp
    11f9:	8d 61 fc             	lea    -0x4(%ecx),%esp
    11fc:	c3                   	ret    

000011fd <__x86.get_pc_thunk.ax>:
    11fd:	8b 04 24             	mov    (%esp),%eax
    1200:	c3                   	ret    

00001201 <JadyNAyW>:
    1201:	55                   	push   %ebp
    1202:	89 e5                	mov    %esp,%ebp
    1204:	53                   	push   %ebx
    1205:	83 ec 04             	sub    $0x4,%esp
    1208:	e8 a3 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    120d:	81 c3 c7 2d 00 00    	add    $0x2dc7,%ebx
    1213:	83 ec 08             	sub    $0x8,%esp
    1216:	8d 83 a8 e0 ff ff    	lea    -0x1f58(%ebx),%eax
    121c:	50                   	push   %eax
    121d:	ff 75 08             	pushl  0x8(%ebp)
    1220:	e8 0b fe ff ff       	call   1030 <strcmp@plt>
    1225:	83 c4 10             	add    $0x10,%esp
    1228:	85 c0                	test   %eax,%eax
    122a:	75 10                	jne    123c <JadyNAyW+0x3b>
    122c:	83 ec 0c             	sub    $0xc,%esp
    122f:	ff 75 08             	pushl  0x8(%ebp)
    1232:	e8 09 fe ff ff       	call   1040 <puts@plt>
    1237:	83 c4 10             	add    $0x10,%esp
    123a:	eb 01                	jmp    123d <JadyNAyW+0x3c>
    123c:	90                   	nop
    123d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1240:	c9                   	leave  
    1241:	c3                   	ret    

00001242 <do_phase>:
    1242:	55                   	push   %ebp
    1243:	89 e5                	mov    %esp,%ebp
    1245:	e8 b3 ff ff ff       	call   11fd <__x86.get_pc_thunk.ax>
    124a:	05 8a 2d 00 00       	add    $0x2d8a,%eax
    124f:	90                   	nop
    1250:	90                   	nop
    1251:	90                   	nop
    1252:	90                   	nop
    1253:	90                   	nop
    1254:	90                   	nop
    1255:	90                   	nop
    1256:	90                   	nop
    1257:	90                   	nop
    1258:	90                   	nop
    1259:	90                   	nop
    125a:	90                   	nop
    125b:	90                   	nop
    125c:	90                   	nop
    125d:	90                   	nop
    125e:	90                   	nop
    125f:	90                   	nop
    1260:	90                   	nop
    1261:	90                   	nop
    1262:	90                   	nop
    1263:	90                   	nop
    1264:	90                   	nop
    1265:	90                   	nop
    1266:	90                   	nop
    1267:	90                   	nop
    1268:	90                   	nop
    1269:	90                   	nop
    126a:	90                   	nop
    126b:	90                   	nop
    126c:	90                   	nop
    126d:	90                   	nop
    126e:	90                   	nop
    126f:	90                   	nop
    1270:	5d                   	pop    %ebp
    1271:	c3                   	ret    
    1272:	66 90                	xchg   %ax,%ax
    1274:	66 90                	xchg   %ax,%ax
    1276:	66 90                	xchg   %ax,%ax
    1278:	66 90                	xchg   %ax,%ax
    127a:	66 90                	xchg   %ax,%ax
    127c:	66 90                	xchg   %ax,%ax
    127e:	66 90                	xchg   %ax,%ax

00001280 <__libc_csu_init>:
    1280:	55                   	push   %ebp
    1281:	57                   	push   %edi
    1282:	56                   	push   %esi
    1283:	53                   	push   %ebx
    1284:	e8 27 fe ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    1289:	81 c3 4b 2d 00 00    	add    $0x2d4b,%ebx
    128f:	83 ec 0c             	sub    $0xc,%esp
    1292:	8b 6c 24 28          	mov    0x28(%esp),%ebp
    1296:	e8 65 fd ff ff       	call   1000 <_init>
    129b:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
    12a1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
    12a7:	29 c6                	sub    %eax,%esi
    12a9:	c1 fe 02             	sar    $0x2,%esi
    12ac:	74 1f                	je     12cd <__libc_csu_init+0x4d>
    12ae:	31 ff                	xor    %edi,%edi
    12b0:	83 ec 04             	sub    $0x4,%esp
    12b3:	55                   	push   %ebp
    12b4:	ff 74 24 2c          	pushl  0x2c(%esp)
    12b8:	ff 74 24 2c          	pushl  0x2c(%esp)
    12bc:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
    12c3:	83 c7 01             	add    $0x1,%edi
    12c6:	83 c4 10             	add    $0x10,%esp
    12c9:	39 fe                	cmp    %edi,%esi
    12cb:	75 e3                	jne    12b0 <__libc_csu_init+0x30>
    12cd:	83 c4 0c             	add    $0xc,%esp
    12d0:	5b                   	pop    %ebx
    12d1:	5e                   	pop    %esi
    12d2:	5f                   	pop    %edi
    12d3:	5d                   	pop    %ebp
    12d4:	c3                   	ret    
    12d5:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    12dc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

000012e0 <__libc_csu_fini>:
    12e0:	c3                   	ret    

Disassembly of section .fini:

000012e4 <_fini>:
    12e4:	53                   	push   %ebx
    12e5:	83 ec 08             	sub    $0x8,%esp
    12e8:	e8 c3 fd ff ff       	call   10b0 <__x86.get_pc_thunk.bx>
    12ed:	81 c3 e7 2c 00 00    	add    $0x2ce7,%ebx
    12f3:	83 c4 08             	add    $0x8,%esp
    12f6:	5b                   	pop    %ebx
    12f7:	c3                   	ret    
